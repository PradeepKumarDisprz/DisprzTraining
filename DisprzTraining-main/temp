// using System.ComponentModel.DataAnnotations;
// using DisprzTraining.Business;
// using DisprzTraining.Data;
// using DisprzTraining.Model;
// using Microsoft.AspNetCore.Mvc;

// namespace DisprzTraining.Controllers
// {
//     [ApiController]
//     public class AppointmentsController : ControllerBase
//     {
//         private readonly IAppointmentBL _appointmentBL;

//         public AppointmentsController(IAppointmentBL appointmentBL)
//         {
//             _appointmentBL = appointmentBL;
//         }

//         //get all appointments
//         [HttpGet, Route("v1/appointments")]
//         [ProducesResponseType(StatusCodes.Status200OK, Type = typeof(AllAppointments))]
//         public async Task<ActionResult> GetAllAppointments([Required] int offSet = 0, [Required] int fetchCount = 10, DateTime? searchDate = null, string? searchTitle = null)
//         {
//             var appointments = await _appointmentBL.GetAllAppointments(offSet, fetchCount, searchDate, searchTitle);
//             return Ok(appointments);
//         }

//         //get appointment by Id
//         [HttpGet, Route("v1/appointments/{appointmentId}")]
//         [ProducesResponseType(StatusCodes.Status200OK, Type = typeof(Appointment))]
//         [ProducesResponseType(StatusCodes.Status404NotFound, Type = typeof(ErrorResponse))]
//         public async Task<ActionResult> GetappointmentById([FromRoute] Guid appointmentId)
//         {
//             var appointmentFound = await _appointmentBL.GetAppointmentById(appointmentId);
//             if (appointmentFound != null)
//             {
//                 return Ok(appointmentFound);
//             }
//             return NotFound(APIResponse.NotFoundResponse);
//         }

//         [HttpGet, Route("v1/appointments/date")]
//         [ProducesResponseType(StatusCodes.Status200OK, Type = typeof(Appointment))]
//         public async Task<ActionResult> GetappointmentByDate([FromQuery] DateTime appointmentDate)
//         {
//             var appointmentFound = await _appointmentBL.GetAppointmentByDate(appointmentDate);
//             if (appointmentFound != null)
//             {
//                 return Ok(appointmentFound);
//             }
//             return NotFound(APIResponse.NotFoundResponse);
//         }

//         //add new appointment
//         [HttpPost, Route("v1/appointments")]
//         [ProducesResponseType(StatusCodes.Status201Created, Type = typeof(NewAppointmentId))]
//         [ProducesResponseType(StatusCodes.Status409Conflict, Type = typeof(ErrorResponse))]
//         [ProducesResponseType(StatusCodes.Status400BadRequest, Type = typeof(ErrorResponse))]
//         public async Task<ActionResult> AddNewAppointment([FromBody] AppointmentDTO newAppointment)
//         {
//             if ((newAppointment.appointmentEndTime < newAppointment.appointmentStartTime) || (newAppointment.appointmentStartTime.Date < DateTime.Now.Date))
//             {
//                 return BadRequest(APIResponse.BadRequestResponse);
//             }

//             var appointment = await _appointmentBL.AddNewAppointment(newAppointment);
//             if (appointment != null)
//             {
//                 return Created(nameof(GetappointmentById), new { meetingId = appointment.appointmentId });
//             }
//             else
//             {
//                 return Conflict(APIResponse.ConflictResponse);
//             }
//         }

//         //update existing appointment
//         [HttpPut, Route("v1/appointments/{appointmentId}")]
//         [ProducesResponseType(StatusCodes.Status204NoContent)]
//         [ProducesResponseType(StatusCodes.Status409Conflict, Type = typeof(ErrorResponse))]
//         [ProducesResponseType(StatusCodes.Status404NotFound, Type = typeof(ErrorResponse))]
//         [ProducesResponseType(StatusCodes.Status400BadRequest, Type = typeof(ErrorResponse))]
//         public async Task<ActionResult> UpdateExistingAppointment([FromRoute] Guid appointmentId, [FromBody] AppointmentDTO updateAppointment)
//         {
//             if ((updateAppointment.appointmentEndTime < updateAppointment.appointmentStartTime) || (updateAppointment.appointmentStartTime.Date < DateTime.Now.Date))
//             {
//                 return BadRequest(APIResponse.BadRequestResponse);
//             }


//             bool isNoConflict = await _appointmentBL.UpdateExistingAppointment(appointmentId, updateAppointment);
//             if (isNoConflict)
//             {
//                 return NoContent();
//             }
//             else
//             {
//                 return Conflict(APIResponse.ConflictResponse);
//             }


//         }


//         //delete appointment by Id
//         [HttpDelete, Route("v1/appointments/{appointmentId}")]
//         [ProducesResponseType(StatusCodes.Status204NoContent)]
//         [ProducesResponseType(StatusCodes.Status404NotFound, Type = typeof(ErrorResponse))]
//         public async Task<ActionResult> DeleteAppointment([FromRoute] Guid appointmentId)
//         {
//             var isDeleted = await _appointmentBL.DeleteAppointment(appointmentId);
//             if (isDeleted)
//             {
//                 return NoContent();
//             }
//             return NotFound(APIResponse.NotFoundResponse);
//         }
//     }
// }











// _allAppointments = await _appointmentDAL.GetAppointments();
            // var appointmentMatched = _allAppointments.Where(meet =>  
            //                                                      ((startDate == null) || (meet.appointmentStartTime.Date == startDate))  
            //                                                      && ((searchTitle == null) || (meet.appointmentTitle.ToLower()
            //                                                      .Contains(searchTitle.ToLower()))))
            //                                                      .OrderBy(meet => meet.appointmentStartTime).ToList();

            // if (appointmentMatched.Any() && fetchCount != 0)
            // {
            //     var meetingSkipped = appointmentMatched.Skip(offSet).ToList();
            //     if (fetchCount >= meetingSkipped.Count())
            //     {
            //         appointmentsFound.isTruncated = false;
            //         appointmentsFound.appointments = meetingSkipped;
            //     }
            //     else
            //     {
            //         appointmentsFound.isTruncated = true;
            //         appointmentsFound.appointments = meetingSkipped.Take(fetchCount).ToList();
            //     }
            // }
            // return appointmentsFound;












            

























// using System.ComponentModel.DataAnnotations;
// using DisprzTraining.Business;
// using DisprzTraining.Data;
// using DisprzTraining.Model;
// using Microsoft.AspNetCore.Mvc;

// namespace DisprzTraining.Controllers
// {
//     [ApiController]
//     public class AppointmentsController : ControllerBase
//     {
//         private readonly IAppointmentBL _appointmentBL;

//         public AppointmentsController(IAppointmentBL appointmentBL)
//         {
//             _appointmentBL = appointmentBL;
//         }

//         //get all appointments
//         [HttpGet, Route("v1/appointments")]
//         public async Task<ActionResult> GetAllAppointments([Required] int offSet = 0, [Required] int fetchCount = 10, DateTime? startDate = null, string? searchTitle = null)
//         {
//             var appointments = await _appointmentBL.GetAllAppointments(offSet, fetchCount, startDate, searchTitle);
//             return Ok(appointments);
//         }

//         //get appointment by Id
//         [HttpGet, Route("v1/appointments/{appointmentId}")]

//         public async Task<ActionResult> GetappointmentById([FromRoute] Guid appointmentId)
//         {
//             var appointmentFound = await _appointmentBL.GetAppointmentById(appointmentId);
//             if (appointmentFound != null)
//             {
//                 return Ok(appointmentFound);
//             }
//             return NotFound(APIResponse.NotFoundResponse);
//         }



//         [HttpGet, Route("v1/appointments/date")]
//         public async Task<ActionResult> GetappointmentByDate([FromQuery] DateTime appointmentDate)
//         {
//             var appointmentFound = await _appointmentBL.GetAppointmentByDate(appointmentDate);
//             return Ok(appointmentFound);
//         }

//         //add new appointment
//         [HttpPost, Route("v1/appointments")]
//         public async Task<ActionResult> AddNewAppointment([FromBody] AppointmentDTO newAppointment)
//         {
//             if ((newAppointment.appointmentEndTime < newAppointment.appointmentStartTime) || (newAppointment.appointmentStartTime.Date < DateTime.Now.Date))
//             {
//                 return BadRequest(APIResponse.BadRequestResponse);
//             }

//             var appointment = await _appointmentBL.AddNewAppointment(newAppointment);
//             if (appointment != null)
//             {
//                 return Created(nameof(GetappointmentById), new { appointmentId = appointment.appointmentId });
//             }
//             else
//             {
//                 return Conflict(APIResponse.ConflictResponse);
//             }
//         }

//         //update existing appointment
//         [HttpPut, Route("v1/appointments/{appointmentId}")]
//         public async Task<ActionResult> UpdateExistingAppointment([FromRoute] Guid appointmentId, [FromBody] AppointmentDTO updateAppointment)
//         {
//             if ((updateAppointment.appointmentEndTime < updateAppointment.appointmentStartTime) || (updateAppointment.appointmentStartTime< DateTime.Now))
//             {
//                 return BadRequest(APIResponse.BadRequestResponse);
//             }

//             bool isNoConflict = await _appointmentBL.UpdateExistingAppointment(appointmentId, updateAppointment);
//             if (isNoConflict)
//             {
//                 return NoContent();
//             }
//             else
//             {
//                 return Conflict(APIResponse.ConflictResponse);
//             }

//         }


//         //delete appointment by Id
//         [HttpDelete, Route("v1/appointments/{appointmentId}")]
//         public async Task<ActionResult> DeleteAppointment([FromRoute] Guid appointmentId)
//         {
//             var isDeleted = await _appointmentBL.DeleteAppointment(appointmentId);
//             if (isDeleted)
//             {
//                 return NoContent();
//             }
//             return NotFound(APIResponse.NotFoundResponse);
//         }
//     }
// }



        // public async Task<List<Appointment>> GetAppointmentByDate(DateTime date)
        // {
        //     var appointmentMatched = (from appointment in _userAppointments
        //                               where ((endDate==null)?(appointment.appointmentStartTime.Date==startDate)
        //                               :((appointment.appointmentStartTime.Date>= startDate)&&(appointment.appointmentEndTime.Date<=endDate)))
        //                               select appointment).ToList();

        //     return await Task.FromResult(appointmentMatched);
        // }
        // &&((endDate==null)||